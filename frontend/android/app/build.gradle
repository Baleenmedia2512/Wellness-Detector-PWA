apply plugin: 'com.android.application'

android {
    namespace "com.wellnessbuddy.app"
    compileSdk rootProject.ext.compileSdkVersion
    
    defaultConfig {
        applicationId "com.wellnessbuddy.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        aaptOptions {
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    
    compileOptions {
        // Set to Java 17
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

repositories {
    google()
    mavenCentral()
    flatDir {
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation 'androidx.core:core:1.12.0'
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
    
    // Updated desugaring for Java 17
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'

    // TensorFlow Lite dependencies for food image classification
    implementation 'org.tensorflow:tensorflow-lite:2.13.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.4.3'

    // OkHttp for Gemini API client
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'

    // AndroidX Security Crypto for EncryptedSharedPreferences
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'
}

apply from: 'capacitor.build.gradle'
apply from: "custom-capacitor.gradle"

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += [
        "-Xlint:unchecked",
        "-Xlint:deprecation"
    ]
    options.encoding = 'UTF-8'
}

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}